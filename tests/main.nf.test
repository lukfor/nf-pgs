nextflow_pipeline {

    name "Test Workflow main.nf"
    script "main.nf"

    test("Test local score files") {

        when {
            params {
                project = "test-gwas"
                genotypes_imputed = "tests/data/*{.vcf.gz,vcf.gz.tbi}"
                genotypes_imputed_format = "vcf"
                genotypes_build = "hg19"
                output = "${outputDir}"
                scores = "tests/data/*.csv"
            }
        }

        then {
            assert workflow.success
        }

    }

    test("Test with vcf only") {

        when {
            params {
                project = "test-gwas"
                genotypes_imputed = "tests/data/*.vcf.gz"
                genotypes_imputed_have_index = false
                genotypes_imputed_format = "vcf"
                genotypes_build = "hg19"
                output = "${outputDir}"
                scores = "tests/data/*.csv"
            }
        }

        then {
            assert workflow.success
        }

    }

    test("Test with vcf only and write variants") {

        when {
            params {
                project = "test-gwas"
                genotypes_imputed = "tests/data/*.vcf.gz"
                genotypes_imputed_have_index = false
                genotypes_imputed_format = "vcf"
                genotypes_build = "hg19"
                output = "${outputDir}"
                scores = "tests/data/*.csv"
                write_variants = true
            }
        }

        then {
            assert workflow.success
        }

    }

    test("Test with chunk size") {

        when {
            params {
                project = "test-gwas"
                genotypes_imputed = "tests/data/*.vcf.gz"
                genotypes_imputed_have_index = false
                genotypes_imputed_format = "vcf"
                genotypes_build = "hg19"
                output = "${outputDir}"
                scores = "tests/data/*.csv"
                chunk_size = 2
            }
        }

        then {
            assert workflow.success
        }

    }

    test("Test with chunk size-lukas") {

        when {
            params {
                project = "test-gwas"
                genotypes_imputed = "/Users/lukfor/Data/projects/humangen/breast-pgs/output/pgs-server/vcf/*.dose.vcf.gz"
                genotypes_imputed_have_index = false
                genotypes_imputed_format = "vcf"
                genotypes_build = "hg19"
                output = "${outputDir}"
                scores = "/Users/lukfor/Data/projects/humangen/breast-pgs/output/pgs-server/PGS000004.txt"
                chunk_size = 20_000_000
                write_variants = true
            }
        }

        then {
            assert workflow.success
        }

    }

}
